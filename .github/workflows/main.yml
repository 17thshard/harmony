name: CI

on:
  push:
    branches:
      - master

jobs:
  default:
    runs-on: ubuntu-latest

    steps:
      - run: echo Build started

  build-conditions:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/master' && contains(github.event.head_commit.message, '[docker-push]')

    steps:
      - run: echo Build conditions are met

  build-node:
    runs-on: ubuntu-latest
    needs: build-conditions

    steps:
      - uses: actions/checkout@v1

      - name: Publish proxy
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          name: marvinroesch/harmony-proxy
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          cache: true

      - name: Publish frontend
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          name: marvinroesch/harmony-frontend
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          context: frontend
          buildoptions: "--target prod"
          cache: true

      - name: Publish backend
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          name: marvinroesch/harmony-backend
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          context: backend
          buildoptions: "--target prod"
          cache: true

  build-gradle:
    runs-on: ubuntu-latest
    needs: build-conditions

    steps:
      - uses: actions/checkout@v1

      - name: Publish bot
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          name: marvinroesch/harmony-bot
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          dockerfile: Dockerfile-gradle
          buildoptions: "--target bot"
          cache: true

      - name: Publish db-import
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          name: marvinroesch/harmony-db-import
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          dockerfile: Dockerfile-gradle
          buildoptions: "--target db-import"
          cache: true

      - name: Publish elastic-ingest
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          name: marvinroesch/harmony-elastic-ingest
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          dockerfile: Dockerfile-gradle
          buildoptions: "--target elastic-ingest"
          cache: true

  build-elasticsearch:
    runs-on: ubuntu-latest
    needs: build-conditions

    steps:
      - uses: actions/checkout@v1

      - name: Publish elasticsearch
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          name: marvinroesch/harmony-elasticsearch
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          context: elastic-ingest
          dockerfile: Dockerfile-elasticsearch
          cache: true
